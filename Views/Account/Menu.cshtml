@model IEnumerable<TEST2.Models.MenuItemModel>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Restaurant.RestaurantName</title>
    <link rel="stylesheet" href="/css/site.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        /* General Styles */
        body {
            font-family: 'Arial', sans-serif;
            background-color: #e8f5f5;
            margin: 0;
            padding: 0;
        }

        .menu-card {
            border: 1px solid #ddd;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            background-color: #fff;
            padding: 15px;
            margin-bottom: 20px;
            transition: transform 0.3s;
        }

            .menu-card:hover {
                transform: scale(1.02);
            }

            .menu-card .details h5 {
                font-size: 1.5rem;
                font-weight: bold;
                color: #004d40;
            }

            .menu-card .details .price {
                font-size: 1.2rem;
                font-weight: bold;
                color: #388e3c;
            }

        .customization-dropdown {
            display: none;
            margin-top: 10px;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 10px;
            background-color: #f8f9fa;
        }

        .btn-primary {
            background-color: #007bff;
            color: white;
        }

            .btn-primary:hover {
                background-color: #0056b3;
            }

        .view-cart {
            background-color: #000000;
            color: #008080;
            font-weight: bold;
            padding: 10px 20px;
            border: 2px solid #008080;
            border-radius: 8px;
            text-decoration: none;
            transition: all 0.3s ease;
        }

            .view-cart:hover {
                background-color: #008080;
                color: #ffffff;
                transform: scale(1.1);
            }
    </style>
</head>
<body>
    <div class="container">
        <div class="menu-section">
            <h2>Menu</h2>
            @foreach (var item in Model)
            {
                <div class="menu-card">
                    <div class="details">
                        <h5>@item.ItemName</h5>
                        <p>@item.Description</p>
                        <div class="price">$@item.Price</div>

                        <!-- Quantity Input -->
                        <div class="mb-2">
                            <label for="quantity_@item.MenuItemId">Quantity:</label>
                            <input type="number" id="quantity_@item.MenuItemId" class="form-control" value="1" min="1" />
                        </div>

                        <!-- Add to Cart Button -->
                        <button class="btn btn-primary" onclick="addToCart(@item.MenuItemId)">
                            Add to Cart
                        </button>

                        <!-- Customize Button -->
                        <button class="btn btn-secondary mt-2" onclick="toggleCustomizationDropdown(this)">
                            Customize
                        </button>

                        <!-- Customization Dropdown -->
                        <div class="customization-dropdown">
                            @foreach (var option in item.CustomizationOptions)
                            {
                                <div>
                                    <input type="checkbox" id="customOption_@option.CustomizationId" value="@option.Name" />
                                    <label for="customOption_@option.CustomizationId">@option.Name</label>
                                </div>
                            }

                            <div class="mt-2">
                                <input type="text" class="form-control" id="customNote_@item.MenuItemId" placeholder="Enter custom notes" />
                            </div>

                            <!-- Add Customization Button -->
                            <button class="btn btn-primary mt-2" onclick="addToCartWithCustomizations(@item.MenuItemId)">
                                Add Customization
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- View Cart Button -->
        <div class="text-end mb-3">
            <a href="@Url.Action("Cart", "Account")" class="btn view-cart">View Cart</a>
        </div>
    </div>

    <!-- JavaScript for Handling Cart Actions -->
    <script>
        // Toggle the Customization Dropdown
        function toggleCustomizationDropdown(button) {
            const dropdown = button.nextElementSibling;
            dropdown.style.display = dropdown.style.display === 'none' ? 'block' : 'none';
        }

        // Add to Cart without Customizations
        function addToCart(menuItemId) {
            const quantity = document.getElementById(`quantity_${menuItemId}`).value;

            fetch('/api/cart/add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    MenuItemId: menuItemId,
                    Quantity: parseInt(quantity),
                    Customizations: ''
                })
            })
                .then(response => response.json())
                .then(data => alert(data.message))
                .catch(error => console.error('Error:', error));
        }

        // Add to Cart with Customizations
        function addToCartWithCustomizations(menuItemId) {
            const quantity = document.getElementById(`quantity_${menuItemId}`).value;
            const customNote = document.getElementById(`customNote_${menuItemId}`).value;

            // Collect all checked customization options
            const selectedOptions = Array.from(document.querySelectorAll(`#customOption_${menuItemId}:checked`))
                .map(checkbox => checkbox.value)
                .join(', ');

            // Combine the custom note and selected options
            const customizations = [selectedOptions, customNote].filter(c => c).join(', ');

            fetch('/api/cart/add', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    MenuItemId: menuItemId,
                    Quantity: parseInt(quantity),
                    Customizations: customizations
                })
            })
                .then(response => response.json())
                .then(data => alert(data.message))
                .catch(error => console.error('Error:', error));
        }
    </script>
</body>
</html>
